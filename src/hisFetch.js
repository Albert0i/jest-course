import sha256 from 'crypto-js/sha256';
import { redisClient } from "./config/redisClient.js"

const DEFAULT_NAMESPACE = "cache:"
const DEFAULT_TTL = 60  // seconds 

function myFetch(url, options) {
    return new Promise((resolve, reject) => {
      fetch(url, options)
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json(); // Parse the JSON data
        })
        .then(data => {
          resolve(data); // Resolve the Promise with the retrieved data
        })
        .catch(error => {
          reject(error); // Reject the Promise with the error
        });
    });
  } 

  async function myFetch2(url, options) {
    return new Promise((resolve, reject) => {
      fetch(url, options)
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json(); // Parse the JSON data
        })
        .then(data => {
          resolve(data); // Resolve the Promise with the retrieved data
        })
        .catch(error => {
          reject(error); // Reject the Promise with the error
        });
    });
  } 

function calculateSHA256(inputString) {
  return sha256(inputString).toString();
}

export { myFetch }

/*
   crypto-js
   https://www.npmjs.com/package/crypto-js
*/

/* Original code was generated by Chat-GPT */
/*
function myFetch(url) {
  return new Promise((resolve, reject) => {
    fetch(url)
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json(); // Parse the JSON data
      })
      .then(data => {
        resolve(data); // Resolve the Promise with the retrieved data
      })
      .catch(error => {
        reject(error); // Reject the Promise with the error
      });
  });
}

// Example of using the myFetch function
const apiUrl = 'https://jsonplaceholder.typicode.com/posts/1';

myFetch(apiUrl)
  .then(data => {
    console.log(data); // Log the retrieved data to the console
  })
  .catch(error => {
    console.error('There was a problem with your fetch operation:', error);
  });

*/